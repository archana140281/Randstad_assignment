<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="TS01_Compare Product Price" time="70.397" tests="1" failures="0" errors="0">
   <testsuite name="TS01_Compare Product Price" tests="1" failures="0" errors="0" time="70.397" timestamp="2020-12-17 00:13:41" hostname="User-iMoney - 192.168.0.8" id="Test Suites/TS01_Compare Product Price">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="D:\\Archana\\Automation_Randstad\\Reports\\20201217_001326\\TS01_Compare Product Price\\20201217_001326"/>
         <property name="logFiles" value="D:\\Archana\\Automation_Randstad\\Reports\\20201217_001326\\TS01_Compare Product Price\\20201217_001326\\execution0.log"/>
         <property name="attachments" value="D:\\Archana\\Automation_Randstad\\Reports\\20201217_001326\\TS01_Compare Product Price\\20201217_001326/videos\\test_1.avi"/>
         <property name="hostName" value="User-iMoney - 192.168.0.8"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="7.2.1.1"/>
         <property name="browser" value="Chrome 87.0.4280.88"/>
         <property name="hostAddress" value="192.168.0.8"/>
         <property name="sessionId" value="27316c0fd0cca3155ee9677ce8127cb1"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0, executionList=}"/>
         <property name="platform" value="Windows 10"/>
      </properties>
      <testcase name="Test Cases/TestCase_01_ComparePrice" time="63.29" classname="Test Cases/TestCase_01_ComparePrice" status="PASSED">
         <system-out><![CDATA[2020-12-17 00:13:41 - [TEST_CASE][PASSED] - Test Cases/TestCase_01_ComparePrice: Test Cases/TestCase_01_ComparePrice

2020-12-17 00:13:42 - [TEST_STEP][PASSED] - callTestCase(findTestCase("fnCommon/fn01_OpenBrowser_Navigate"), ["SiteURL":SiteURL1], STOP_ON_FAILURE): Call Test Case 'Test Cases/fnCommon/fn01_OpenBrowser_Navigate' successfully

2020-12-17 00:13:42 - [TEST_CASE][PASSED] - Test Cases/fnCommon/fn01_OpenBrowser_Navigate: Test Cases/fnCommon/fn01_OpenBrowser_Navigate

2020-12-17 00:13:43 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2020-12-17 00:13:43 - [MESSAGE][INFO] - Starting 'Chrome' driver

2020-12-17 00:13:43 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2020-12-17 00:13:49 - [MESSAGE][PASSED] - Browser is opened with url: ''

2020-12-17 00:13:49 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2020-12-17 00:13:51 - [MESSAGE][PASSED] - Current window maximized

2020-12-17 00:13:51 - [TEST_STEP][PASSED] - Thread.sleep(1000): null

2020-12-17 00:13:52 - [TEST_STEP][PASSED] - navigateToUrl(SiteURL): Navigate to 'https://www.amazon.com/' successfully

2020-12-17 00:13:56 - [MESSAGE][PASSED] - Navigate to 'https://www.amazon.com/' successfully

2020-12-17 00:13:56 - [TEST_STEP][PASSED] - Thread.sleep(1000): null

2020-12-17 00:13:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/fnCommon/fn01_OpenBrowser_Navigate' successfully

2020-12-17 00:13:57 - [TEST_STEP][PASSED] - callTestCase(findTestCase("fnCommon/fn02_Product_from_Amazon"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/fnCommon/fn02_Product_from_Amazon' successfully

2020-12-17 00:13:57 - [TEST_CASE][PASSED] - Test Cases/fnCommon/fn02_Product_from_Amazon: Test Cases/fnCommon/fn02_Product_from_Amazon

2020-12-17 00:13:57 - [TEST_STEP][PASSED] - setText(findTestObject("Page_Amazon/txt_Searchbox"), "iphone 11"): Text 'iphone 11' is set on object 'Object Repository/Page_Amazon/txt_Searchbox'

2020-12-17 00:13:59 - [MESSAGE][PASSED] - Text 'iphone 11' is set on object 'Object Repository/Page_Amazon/txt_Searchbox'

2020-12-17 00:13:59 - [TEST_STEP][PASSED] - click(findTestObject("Page_Amazon/btn_Searchicon")): Object: 'Object Repository/Page_Amazon/btn_Searchicon' is clicked on

2020-12-17 00:14:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Amazon/btn_Searchicon' is clicked on

2020-12-17 00:14:05 - [TEST_STEP][PASSED] - click(findTestObject("Page_Amazon/span_Apple iPhone11")): Object: 'Object Repository/Page_Amazon/span_Apple iPhone11' is clicked on

2020-12-17 00:14:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Amazon/span_Apple iPhone11' is clicked on

2020-12-17 00:14:09 - [TEST_STEP][PASSED] - sGetValue = getText(findTestObject("Page_Amazon/txt_ProductTitle")): Text of object 'Object Repository/Page_Amazon/txt_ProductTitle' is: 'Apple iPhone 11 Pro, 64GB, Space Gray - Fully Unlocked (Renewed)'

2020-12-17 00:14:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_Amazon/txt_ProductTitle' is: 'Apple iPhone 11 Pro, 64GB, Space Gray - Fully Unlocked (Renewed)'

2020-12-17 00:14:12 - [TEST_STEP][PASSED] - comment("Name of Website :- Amazon"): Name of Website :- Amazon

2020-12-17 00:14:12 - [MESSAGE][INFO] - Name of Website :- Amazon

2020-12-17 00:14:12 - [TEST_STEP][PASSED] - comment("Name of the product for Amazon :- " + sGetValue): Name of the product for Amazon :- Apple iPhone 11 Pro, 64GB, Space Gray - Fully Unlocked (Renewed)

2020-12-17 00:14:12 - [MESSAGE][INFO] - Name of the product for Amazon :- Apple iPhone 11 Pro, 64GB, Space Gray - Fully Unlocked (Renewed)

2020-12-17 00:14:12 - [TEST_STEP][PASSED] - println("Name of Website :- Amazon"): null

2020-12-17 00:14:13 - [TEST_STEP][PASSED] - println("Name of the product for Amazon :- " + sGetValue): null

2020-12-17 00:14:13 - [TEST_STEP][PASSED] - sGetPrice = getText(findTestObject("Page_Amazon/txt_Price")): Text of object 'Object Repository/Page_Amazon/txt_Price' is: '$723.00'

2020-12-17 00:14:14 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_Amazon/txt_Price' is: '$723.00'

2020-12-17 00:14:14 - [TEST_STEP][PASSED] - comment("Price of the product for Amazon :- " + sGetPrice): Price of the product for Amazon :- $723.00

2020-12-17 00:14:15 - [MESSAGE][INFO] - Price of the product for Amazon :- $723.00

2020-12-17 00:14:15 - [TEST_STEP][PASSED] - println("Price of the product for Amazon :- " + sGetPrice): null

2020-12-17 00:14:15 - [TEST_STEP][PASSED] - Price_amazon = sGetPrice: null

2020-12-17 00:14:15 - [TEST_STEP][PASSED] - sGetLink = getUrl(): Current window's url is: 'https://www.amazon.com/Apple-iPhone-64GB-Space-Gray/dp/B07ZPKZSSC/ref=sr_1_2?dchild=1&keywords=iphone+11&qid=1608135241&sr=8-2'

2020-12-17 00:14:15 - [MESSAGE][PASSED] - Current window's url is: 'https://www.amazon.com/Apple-iPhone-64GB-Space-Gray/dp/B07ZPKZSSC/ref=sr_1_2?dchild=1&keywords=iphone+11&qid=1608135241&sr=8-2'

2020-12-17 00:14:15 - [TEST_STEP][PASSED] - comment("Link for the product for Amazon :- " + sGetLink): Link for the product for Amazon :- https://www.amazon.com/Apple-iPhone-64GB-Space-Gray/dp/B07ZPKZSSC/ref=sr_1_2?dchild=1&keywords=iphone+11&qid=1608135241&sr=8-2

2020-12-17 00:14:15 - [MESSAGE][INFO] - Link for the product for Amazon :- https://www.amazon.com/Apple-iPhone-64GB-Space-Gray/dp/B07ZPKZSSC/ref=sr_1_2?dchild=1&keywords=iphone+11&qid=1608135241&sr=8-2

2020-12-17 00:14:15 - [TEST_STEP][PASSED] - println("Link for the product for Amazon :- " + sGetLink): null

2020-12-17 00:14:15 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2020-12-17 00:14:15 - [MESSAGE][PASSED] - Browser is closed

2020-12-17 00:14:15 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/fnCommon/fn02_Product_from_Amazon' successfully

2020-12-17 00:14:15 - [TEST_STEP][PASSED] - callTestCase(findTestCase("fnCommon/fn01_OpenBrowser_Navigate"), ["SiteURL":SiteURL2], STOP_ON_FAILURE): Call Test Case 'Test Cases/fnCommon/fn01_OpenBrowser_Navigate' successfully

2020-12-17 00:14:16 - [TEST_CASE][PASSED] - Test Cases/fnCommon/fn01_OpenBrowser_Navigate: Test Cases/fnCommon/fn01_OpenBrowser_Navigate

2020-12-17 00:14:16 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2020-12-17 00:14:16 - [MESSAGE][INFO] - Starting 'Chrome' driver

2020-12-17 00:14:19 - [MESSAGE][PASSED] - Browser is opened with url: ''

2020-12-17 00:14:19 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2020-12-17 00:14:21 - [MESSAGE][PASSED] - Current window maximized

2020-12-17 00:14:21 - [TEST_STEP][PASSED] - Thread.sleep(1000): null

2020-12-17 00:14:22 - [TEST_STEP][PASSED] - navigateToUrl(SiteURL): Navigate to 'https://www.ebay.com/' successfully

2020-12-17 00:14:25 - [MESSAGE][PASSED] - Navigate to 'https://www.ebay.com/' successfully

2020-12-17 00:14:25 - [TEST_STEP][PASSED] - Thread.sleep(1000): null

2020-12-17 00:14:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/fnCommon/fn01_OpenBrowser_Navigate' successfully

2020-12-17 00:14:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("fnCommon/fn03_Product_from_ebay"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/fnCommon/fn03_Product_from_ebay' successfully

2020-12-17 00:14:26 - [TEST_CASE][PASSED] - Test Cases/fnCommon/fn03_Product_from_ebay: Test Cases/fnCommon/fn03_Product_from_ebay

2020-12-17 00:14:26 - [TEST_STEP][PASSED] - setText(findTestObject("Page_eBay/txt_Search_ebay"), "iphone 11"): Text 'iphone 11' is set on object 'Object Repository/Page_eBay/txt_Search_ebay'

2020-12-17 00:14:28 - [MESSAGE][PASSED] - Text 'iphone 11' is set on object 'Object Repository/Page_eBay/txt_Search_ebay'

2020-12-17 00:14:28 - [TEST_STEP][PASSED] - click(findTestObject("Page_eBay/btn_Search_ebay")): Object: 'Object Repository/Page_eBay/btn_Search_ebay' is clicked on

2020-12-17 00:14:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_eBay/btn_Search_ebay' is clicked on

2020-12-17 00:14:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_eBay/link_product")): Object: 'Object Repository/Page_eBay/link_product' is clicked on

2020-12-17 00:14:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_eBay/link_product' is clicked on

2020-12-17 00:14:36 - [TEST_STEP][PASSED] - sGetValue = getText(findTestObject("Page_eBay/txt_Productname")): Text of object 'Object Repository/Page_eBay/txt_Productname' is: 'Apple iPhone 11 Pro Max - 256GB - Gold A2161 (CDMA + GSM)'

2020-12-17 00:14:39 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_eBay/txt_Productname' is: 'Apple iPhone 11 Pro Max - 256GB - Gold A2161 (CDMA + GSM)'

2020-12-17 00:14:39 - [TEST_STEP][PASSED] - comment("Name of Website :- ebay"): Name of Website :- ebay

2020-12-17 00:14:39 - [MESSAGE][INFO] - Name of Website :- ebay

2020-12-17 00:14:39 - [TEST_STEP][PASSED] - comment("Name of the product for ebay :- " + sGetValue): Name of the product for ebay :- Apple iPhone 11 Pro Max - 256GB - Gold A2161 (CDMA + GSM)

2020-12-17 00:14:39 - [MESSAGE][INFO] - Name of the product for ebay :- Apple iPhone 11 Pro Max - 256GB - Gold A2161 (CDMA + GSM)

2020-12-17 00:14:39 - [TEST_STEP][PASSED] - println("Name of Website :- ebay"): null

2020-12-17 00:14:39 - [TEST_STEP][PASSED] - println("Name of the product for ebay :- " + sGetValue): null

2020-12-17 00:14:39 - [TEST_STEP][PASSED] - sGetPrice = getText(findTestObject("Page_eBay/txt_productprice")): Text of object 'Object Repository/Page_eBay/txt_productprice' is: 'US $740.00'

2020-12-17 00:14:41 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_eBay/txt_productprice' is: 'US $740.00'

2020-12-17 00:14:41 - [TEST_STEP][PASSED] - comment("Price of the product for ebay :- " + sGetPrice): Price of the product for ebay :- US $740.00

2020-12-17 00:14:41 - [MESSAGE][INFO] - Price of the product for ebay :- US $740.00

2020-12-17 00:14:41 - [TEST_STEP][PASSED] - println("Price of the product for ebay :- " + sGetPrice): null

2020-12-17 00:14:41 - [TEST_STEP][PASSED] - Price_ebay = sGetPrice: null

2020-12-17 00:14:41 - [TEST_STEP][PASSED] - sGetLink = getUrl(): Current window's url is: 'https://www.ebay.com/itm/Apple-iPhone-11-Pro-Max-256GB-Gold-A2161-CDMA-GSM/274610973194?epid=22034217307&hash=item3ff016ea0a:g:VjgAAOSwcmVfv0Oz'

2020-12-17 00:14:41 - [MESSAGE][PASSED] - Current window's url is: 'https://www.ebay.com/itm/Apple-iPhone-11-Pro-Max-256GB-Gold-A2161-CDMA-GSM/274610973194?epid=22034217307&hash=item3ff016ea0a:g:VjgAAOSwcmVfv0Oz'

2020-12-17 00:14:41 - [TEST_STEP][PASSED] - comment("Link for the product for ebay :- " + sGetLink): Link for the product for ebay :- https://www.ebay.com/itm/Apple-iPhone-11-Pro-Max-256GB-Gold-A2161-CDMA-GSM/274610973194?epid=22034217307&hash=item3ff016ea0a:g:VjgAAOSwcmVfv0Oz

2020-12-17 00:14:41 - [MESSAGE][INFO] - Link for the product for ebay :- https://www.ebay.com/itm/Apple-iPhone-11-Pro-Max-256GB-Gold-A2161-CDMA-GSM/274610973194?epid=22034217307&hash=item3ff016ea0a:g:VjgAAOSwcmVfv0Oz

2020-12-17 00:14:41 - [TEST_STEP][PASSED] - println("Link for the product for ebay :- " + sGetLink): null

2020-12-17 00:14:41 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2020-12-17 00:14:42 - [MESSAGE][PASSED] - Browser is closed

2020-12-17 00:14:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/fnCommon/fn03_Product_from_ebay' successfully

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - callTestCase(findTestCase("fnCommon/fn04_ComparePrice"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/fnCommon/fn04_ComparePrice' successfully

2020-12-17 00:14:42 - [TEST_CASE][PASSED] - Test Cases/fnCommon/fn04_ComparePrice: Test Cases/fnCommon/fn04_ComparePrice

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - priceAmazon = Price_amazon.split("\$"): null

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - priceebay = Price_ebay.split("\$"): null

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - comment("Price of product at Amazon  :-" + priceAmazon[1]): Price of product at Amazon  :-723.00

2020-12-17 00:14:42 - [MESSAGE][INFO] - Price of product at Amazon  :-723.00

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - println(priceAmazon[1]): null

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - comment("Price of product at ebay :-" + priceebay[1]): Price of product at ebay :-740.00

2020-12-17 00:14:42 - [MESSAGE][INFO] - Price of product at ebay :-740.00

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - println(priceebay[1]): null

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - priceeAmazonNew = Float.parseFloat(priceAmazon[1]): null

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - priceebayNew = Float.parseFloat(priceebay[1]): null

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - if (priceeAmazonNew < priceebayNew): null

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - markPassed("Amazon has lesser price value for product than Ebay"): Amazon has lesser price value for product than Ebay

2020-12-17 00:14:42 - [MESSAGE][PASSED] - Amazon has lesser price value for product than Ebay

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - markPassed("1. Amazon price value for product :- " + Price_amazon): 1. Amazon price value for product :- $723.00

2020-12-17 00:14:42 - [MESSAGE][PASSED] - 1. Amazon price value for product :- $723.00

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - markPassed("2. ebay price value for product :- " + Price_ebay): 2. ebay price value for product :- US $740.00

2020-12-17 00:14:42 - [MESSAGE][PASSED] - 2. ebay price value for product :- US $740.00

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - println("Amazon has lesser price value for product than Ebay"): null

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - println("1. Amazon price value for product :- " + Price_amazon): null

2020-12-17 00:14:42 - [TEST_STEP][PASSED] - println("2. ebay price value for product :- " + Price_ebay): null

2020-12-17 00:14:42 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/fnCommon/fn04_ComparePrice' successfully

2020-12-17 00:14:45 - [TEST_STEP][PASSED] - Video: Video recording for test case 'Test Cases/TestCase_01_ComparePrice' .

2020-12-17 00:14:45 - [MESSAGE][INFO] - Video recording for test case 'Test Cases/TestCase_01_ComparePrice' .
[[ATTACHMENT|D:\\Archana\\Automation_Randstad\\Reports\\20201217_001326\\TS01_Compare Product Price\\20201217_001326/videos\\test_1.avi]]]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2020-12-17 00:13:41 - [TEST_SUITE][PASSED] - TS01_Compare Product Price: Test Cases/TestCase_01_ComparePrice]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
